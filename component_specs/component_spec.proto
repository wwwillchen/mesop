syntax = "proto3";

package mesop_internal.component_specs.protos;


// Everything needed to generate a component spec
message ComponentSpecInput {
    string name = 1;
    string target_class = 4;
    string file_path = 2;
    bool has_content = 3;

    // Element to render, e.g. "mat-checkbox"
    string element_name = 5;

    // TODO: may need to make this multiple modules
    NgModuleSpec ng_module = 6;
}

// Used to define a component which can generate a template such as:
//   <mat-checkbox [checked]="isChecked" (change)="handleCheckboxChange($event)">
//   {{config().getLabel()}}
// </mat-checkbox>
message ComponentSpec {
    ComponentSpecInput input = 1;


    repeated ElementProp props = 3;
}

message NgModuleSpec {
    string import_path = 1;
    string module_name = 2;
    // Other symbols that need to be imported
    repeated string other_symbols = 3;
}

message ContentSpec {
    string name = 1;
    JsType type = 2;
}

message ElementProp {
    // e.g. "checked"
    string key = 1;
    oneof value {
        // e.g. "checked" in `[checked]="someVal"`
        PropertyBinding property_binding = 2;
        // (event)="handleChange($event)"
        EventBinding event_binding = 3;
        // dual-binding
        string model_binding = 4;
    }
}

message PropertyBinding {
    string name = 1;
    JsType type = 2;
    string debug_type = 3;
}

message EventBinding {
    // e.g. MatCheckboxChange
    string event_name = 1;
    repeated EventProp props = 2;
}

message EventProp {
    // e.g. "changed"
    string key = 1;
    JsType type = 2;
}

message JsType {
  oneof type {
    SimpleType simple_type = 1;
    StringLiterals string_literals = 2;
  }
}

enum SimpleType {
    JS_TYPE_UNDEFINED = 0;
    STRING = 1;
    BOOL = 2;
    NUMBER = 3;
}

message StringLiterals {
    repeated string string_literal = 1;
}
