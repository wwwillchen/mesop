import mesop as me


@me.stateclass
class State:
  selected_model: str = "Choose a model"
  prompt: str = ""
  output: str = ""
  temperature: float = 0.5
  top_k: int = 50
  history: list[str]


@me.page()
def app():
  with me.box(
    style=me.Style(
      background="#f0f4f8",
      height="100vh",
      display="grid",
      grid_template_rows="1fr 8fr",
      gap="24px",
    )
  ):
    header()
    main_area()


def header():
  with me.box(
    style=me.Style(
      background="#fff",
      border_radius="12px",
      box_shadow="0 3px 1px -2px #0003, 0 2px 2px #00000024, 0 1px 5px #0000001f",
      padding=me.Padding.all(24),
      display="flex",
      justify_content="space-between",
      align_items="center",
    )
  ):
    me.text("LLM Playground", type="headline-4")
    with me.box(style=me.Style(display="flex", gap="16px")):
      me.button(
        "View History",
        color="primary",
        type="flat",
        style=me.Style(padding=me.Padding.all(12), font_size="16px"),
      )
      me.button(
        "Discover Prompts",
        color="primary",
        type="flat",
        style=me.Style(padding=me.Padding.all(12), font_size="16px"),
      )


def main_area():
  with me.box(
    style=me.Style(
      background="#fff",
      border_radius="12px",
      box_shadow="0 3px 1px -2px #0003, 0 2px 2px #00000024, 0 1px 5px #0000001f",
      padding=me.Padding.all(24),
      display="grid",
      grid_template_columns="1fr 2fr",
      gap="24px",
    )
  ):
    left_panel()
    right_panel()


def left_panel():
  with me.box(
    style=me.Style(display="flex", flex_direction="column", gap="16px")
  ):
    me.text("Select Model", style=me.Style(font_weight=500))
    me.select(
      options=[
        me.SelectOption(label="Model 1 - Description", value="model_1"),
        me.SelectOption(label="Model 2 - Description", value="model_2"),
        me.SelectOption(label="Model 3 - Description", value="model_3"),
      ],
      on_selection_change=on_model_select,
      style=me.Style(width="100%"),
    )
    me.text("Prompt", style=me.Style(font_weight=500))
    me.textarea(
      rows=8,
      style=me.Style(width="100%"),
      placeholder="Enter your prompt here...",
    )
    me.button(
      "Generate",
      color="primary",
      type="flat",
      style=me.Style(padding=me.Padding.all(16), font_size="18px"),
      on_click=generate_response,
    )
    me.text("Parameters", style=me.Style(font_weight=500))
    with me.box(style=me.Style(display="flex", gap="16px")):
      me.slider(
        # label="Temperature",
        min=0,
        max=1,
        step=0.1,
        on_value_change=on_temperature_change,
        # style=me.Style(width="100%"),
      )
      me.slider(
        # label="Top K",
        min=10,
        max=100,
        step=10,
        on_value_change=on_top_k_change,
        # style=me.Style(width="100%"),
      )


def right_panel():
  state = me.state(State)
  with me.box(
    style=me.Style(display="flex", flex_direction="column", gap="16px")
  ):
    me.text("Output", style=me.Style(font_weight=500))
    me.markdown(
      state.output,
      style=me.Style(height="calc(100% - 64px)", overflow_y="auto"),
    )


def on_model_select(e: me.SelectSelectionChangeEvent):
  state = me.state(State)
  state.selected_model = e.value


def generate_response(e: me.ClickEvent):
  state = me.state(State)
  # Simulate LLM response
  state.output = (
    f"Response generated by {state.selected_model} with temperature {state.temperature} and top_k {state.top_k}:\n\n"
    + state.prompt
    + "..."
  )
  state.history.append(f"{state.prompt} - {state.output}")


def on_temperature_change(e: me.SliderValueChangeEvent):
  state = me.state(State)
  state.temperature = e.value


def on_top_k_change(e: me.SliderValueChangeEvent):
  state = me.state(State)
  state.top_k = int(e.value)
